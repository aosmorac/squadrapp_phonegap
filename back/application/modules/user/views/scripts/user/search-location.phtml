<div class="profile-modal">
	<div class="header">
    	&nbsp;
    </div>
	
    <div class="map-location" id="map-location">
    	
    </div>
    
    <div class="geoloc"><a href="javascript:void(0);" class="btn_localizacion_49x48" id="get-geoLoc"></a></div>
    
    <div class="tooltip-map">
    	<div class="photo"><img src="https://graph.facebook.com/<?php echo App_User::getUserFacebookId(); ?>/picture?width=43&height=43" width="43" height="43"></div>
    	<p class="title">Mi locación</p>
        <p class="city" id="location_tooltip_change"><?php echo App_User::getCity(); ?></p>
    </div>

    <div class="footer">
    	<div class="search-fields">
            <input type="text" id="place-location" class="place-field" placeholder="Comparte tu ubicación" />
            <a href="javascript:void(0);" class="btn_buscar_116x45" id="find-location"></a>
        </div>
        <a href="javascript:void(0);" class="btn_confirmar_106x46" id="save-location"></a>
    </div>
</div>




<style>
.profile-modal{
	width:100%;
	height:100%;
	margin:0 auto;
	position:relative;0
}
.profile-modal .header{
	position:absolute;
	top:0; left:0; right:0;
	background:#333;
	color:#FFF;
	font-size:13px;
	padding:7px;
	text-align:center;
	z-index:101;
	box-shadow: 0 5px 5px -3px #888;
   	-webkit-box-shadow: 0 5px 5px -3px #888;
   	-moz-box-shadow: 0 5px 5px -3px #888;
}

.profile-modal .map-location{
	position:absolute;
	top:42px; left:15px; right:15px; bottom:58px;
	box-shadow: 0 0 3px 0 #888;
   	-webkit-box-shadow: 0 0 3px 0 #888;
   	-moz-box-shadow: 0 0 3px 0 #888;
	z-index:101;
}

.profile-modal .geoloc{
	position:absolute;
	z-index:101;
	top:40px; right:20px;
}

.profile-modal .tooltip-map{
	position:absolute;
	z-index:101;
	top:165px; left:274px;
	height:80px;
	width:225px;
	margin-left:-111px;
	background:url(/img/user_location_bg.png) top center no-repeat;
	color:#FFF;
	padding:10px 0 10px 35px;
	text-align:left;
}
.profile-modal .tooltip-map.title{
	color:#FFF;
	font-size:14px;
	text-align:left;
}
.profile-modal .tooltip-map.city{
	color:#FFF;
	font-size:11px;
	font-weight:bold;
	text-align:left;
}
.profile-modal .tooltip-map .photo{
	float:right;
	z-index:102;
	margin-right:25px;
	margin-top:-3px;
}

.profile-modal .footer{
	position:absolute;
	bottom:0; left:0; right:0;
	background:#333;
	color:#FFF;
	font-size:13px;
	text-align:right;
	z-index:101;
	box-shadow: 0 -8px 5px -5px #888;
   	-webkit-box-shadow: 0 -8px 5px -5px #888;
   	-moz-box-shadow: 0 -8px 5px -5px #888;
}
.profile-modal .footer .search-fields{
	display:inline-block;
	text-align:right;
	margin-right:-10px;
}

.profile-modal .footer .search-fields .place-field{
	float:left;
	margin-top:7px;
	margin-left:10px;
	margin-right:-10px;
	width:353px;
	height:32px;
	border:0;
	padding:5px;
}

</style>



 <script>
 
 $(function() {
	 
	 

	var geocoder_change;
	var map_change;
	
	var street_number = '';
	var route = '';
	var locality = '';
	var city = '';
	var administrative_area_level_2 = '';
	var administrative_area_level_1 = '';
	var country = '';
	var postal_code = '';
	
	var formatted_address = '';
	var lat = '';
	var lng = '';
	
	function initializeMapChange() {
	  geocoder_change = new google.maps.Geocoder();
	  var myLatlng = new google.maps.LatLng(0,0);
	  var mapOptions = {
		zoom: 13,
		center: myLatlng,
		mapTypeControl: false,
		overviewMapControl: false,
		panControl: false,
		scrollwheel: false,
		streetViewControl: false,
		zoomControl: true,
		zoomControlOptions: {
		  style: google.maps.ZoomControlStyle.SMALL
		},
		mapTypeId: google.maps.MapTypeId.ROADMAP
	  }
	  map_change = new google.maps.Map(document.getElementById('map-location'), mapOptions);
	}	
	initializeMapChange();
	
	function codeAddressChange() {
	  var address = $("#user_location").val();
	  geocoder_change.geocode( { 'address': address}, function(results, status) {
		if (status == google.maps.GeocoderStatus.OK) {
		  map_change.setCenter(results[0].geometry.location);
		 var marker = new google.maps.Marker({
			  map_change: map_change,
			  position: results[0].geometry.location
		  });
		  
		  street_number = '';
		  route = '';
		  locality = '';
		  city = '';
		  administrative_area_level_2 = '';
		  administrative_area_level_1 = '';
		  country = '';
		  postal_code = '';
		  formatted_address = results[0].formatted_address;
		  lat = results[0].geometry.location.lb;
		  lng = results[0].geometry.location.mb;
		  
		  var arrAddress = results[0].address_components;
			// iterate through address_component array
		  $.each(arrAddress, function (i, address_component) {
				if (address_component.types[0] == "street_number") 
					street_number = address_component.long_name; 
				if (address_component.types[0] == "route") 
					route = address_component.long_name; 
				if (address_component.types[0] == "locality") 
					locality = address_component.long_name; 
				if (address_component.types[0] == "administrative_area_level_2") 
					administrative_area_level_2 = address_component.long_name; 
				if (address_component.types[0] == "administrative_area_level_1") 
					administrative_area_level_1 = address_component.long_name; 
				if (address_component.types[0] == "country") 
					country = address_component.long_name; 
				if (address_component.types[0] == "postal_code") 
					postal_code = address_component.long_name; 
		  });	 
		  city = locality;
		  if (locality==''){
			  city = administrative_area_level_2;
			  if (administrative_area_level_2==''){
				  city = administrative_area_level_1;
			  }
		  }
		  $('#place-location').val(city+', '+country);
		  $("#location_tooltip_change").html(city+', '+country);
		  $("#user_location").val(city+', '+country);
		  //alert(street_number+', '+route+', '+locality+', '+administrative_area_level_2+', '+administrative_area_level_1+', '+country+', '+postal_code);
		} else {
		  alert('Geocode was not successful for the following reason: ' + status);
		}
	  });
	}
	codeAddressChange();
	
	
	function getThisPosition() {
		var lat = map_change.getCenter().lat();
		var lng = map_change.getCenter().lng();
	 	var latlng = new google.maps.LatLng(lat, lng);
  		geocoder_change.geocode({'latLng': latlng}, function(results, status) {
		if (status == google.maps.GeocoderStatus.OK) {
		  map_change.setCenter(results[0].geometry.location);
		 var marker = new google.maps.Marker({
			  map_change: map_change,
			  position: results[0].geometry.location
		  });
		  
		  street_number = '';
		  route = '';
		  locality = '';
		  city = '';
		  administrative_area_level_2 = '';
		  administrative_area_level_1 = '';
		  country = '';
		  postal_code = '';
		  formatted_address = results[0].formatted_address;
		  lat = results[0].geometry.location.lb;
		  lng = results[0].geometry.location.mb;
		  
		  var arrAddress = results[0].address_components;
			// iterate through address_component array
		  $.each(arrAddress, function (i, address_component) {
				if (address_component.types[0] == "street_number") 
					street_number = address_component.long_name; 
				if (address_component.types[0] == "route") 
					route = address_component.long_name; 
				if (address_component.types[0] == "locality") 
					locality = address_component.long_name; 
				if (address_component.types[0] == "administrative_area_level_2") 
					administrative_area_level_2 = address_component.long_name; 
				if (address_component.types[0] == "administrative_area_level_1") 
					administrative_area_level_1 = address_component.long_name; 
				if (address_component.types[0] == "country") 
					country = address_component.long_name; 
				if (address_component.types[0] == "postal_code") 
					postal_code = address_component.long_name; 
		  });	
		  city = locality;  
		  if (locality==''){
			  city = administrative_area_level_2;
			  if (administrative_area_level_2==''){
				  city = administrative_area_level_1;
			  }
		  }
		  $('#place-location').val(city+', '+country);
		  $("#location_tooltip_change").html(city+', '+country);
		  $("#user_location").val(city+', '+country);
		  $("#location_tooltip").html(city+', '+country);
		  $("#location_header").html(city+', '+country);
		} else {
		  alert('Geocode was not successful for the following reason: ' + status);
		}
	  });
	}
	
	
	
	function getGeolocation(){
		if(navigator.geolocation) {
			navigator.geolocation.getCurrentPosition(function(position) {
			  var pos = new google.maps.LatLng(position.coords.latitude,
											   position.coords.longitude);
		
			  
			  map_change.setCenter(pos);
			  getThisPosition();
			}, function() {
			});
		}
	}
	
	
	$('#get-geoLoc').click(function(){
		getGeolocation();
	});


	$('#find-location').click(function(){
		$('#user_location').val($('#place-location').val());
		codeAddressChange();
	});
	
	
	
	$('#save-location').click(function(){
		getThisPosition();
		$(".close-overlay").click();
		$.ajax({
			type: "POST",
			url: '/user/user/save-user-location',
			dataType: "json",
			data: {
					use_street_number : ''+street_number,
					use_route : ''+route,
					use_locality : ''+locality,
					use_city : ''+city,
					use_administrative_area_level_2 : ''+administrative_area_level_2,
					use_administrative_area_level_1 : ''+administrative_area_level_1,
					use_country : ''+country,
					use_postal_code : ''+postal_code,
					use_formatted_address : ''+formatted_address ,
					use_lat : ''+lat,
					use_lng : ''+lng
				  },
			success: function(data)
			{
					codeAddress();
			}
		}); 
	});


 });
 
 </script>